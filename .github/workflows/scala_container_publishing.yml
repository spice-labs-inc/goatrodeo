name: Build and Publish Scala Docker Image

on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"
  workflow_dispatch:
  workflow_run:
    workflows:
    types: [completed]
    branches:
      - "main"

env:
  GHCR_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKERHUB_NAMESPACE: ${{ secrets.DOCKER_USERNAME }}

jobs:
  build_and_push:
    name: Build and Push Docker image
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' |
| github.event_name == 'push' |
| (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Checkout with LFS
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt-hotspot'
          cache: 'sbt'
      - name: Set up sbt
        uses: sbt/setup-sbt@v1
      - name: Declare some variables
        shell: bash
        run: |
          echo "short_git_hash=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
          echo "git_branch=$(echo ${GITHUB_REF#refs/heads/})" >> "$GITHUB_ENV"
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Log in to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Enable sbt-native-packager
        shell: bash
        run: |
          echo 'addSbtPlugin("com.typesafe.sbt" % "sbt-native-packager" % "1.9.16")' >> project/plugins.sbt
      - name: Set Docker image name in sbt
        shell: bash
        run: |
          echo "docker / imageNames := Seq(ImageName(\"${{ env.GHCR_REGISTRY }}/${{ github.repository }}\", Some(\"${{ github.sha }}\")), ImageName(\"${{ env.GHCR_REGISTRY }}/${{ github.repository }}\", Some(\"${{ env.short_git_hash }}\")), ImageName(\"${{ env.DOCKERHUB_NAMESPACE }}/${{ github.event.repository.name }}\", Some(\"${{ github.sha }}\")), ImageName(\"${{ env.DOCKERHUB_NAMESPACE }}/${{ github.event.repository.name }}\", Some(\"${{ env.short_git_hash }}\")))" >> build.sbt
      - name: Stage Docker build environment from sbt
        run: sbt Docker/stage
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: scala-app-${{ github.sha }}
          path: target/docker/stage/lib/*.jar
      - name: Build and Push Docker image with sbt
        run: sbt docker:publish
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
