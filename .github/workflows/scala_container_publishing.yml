name: Publish Scala Container Images

on:
  release:
    types: [published]
  workflow_run:
    workflows: ["Scala Build & Test"]
    types: [completed]
  workflow_dispatch:
    inputs:
      version:
        description: "Version number (e.g., 1.0.0)"
        required: true
        type: string

env:
  GHCR_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKERHUB_NAMESPACE: ${{ secrets.DOCKER_USERNAME }}

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub and GHCR
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'release' ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') ||
      github.event_name == 'workflow_dispatch'
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Checkout with LFS
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt-hotspot'
          cache: 'sbt'

      - name: Set up sbt
        uses: sbt/setup-sbt@v1

      - name: Package application
        run: sbt package

      - name: Save JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: goatrodeo-${{ github.run_id }}
          path: target/scala-*/goatrodeo*.jar

      - name: Declare some variables
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "version=${{ github.event.inputs.version }}" >> "$GITHUB_ENV"
          else
            echo "version=$(echo $GITHUB_REF | awk -F'/' '{print $3}')" >> "$GITHUB_ENV"
          fi
          echo "short_git_hash=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Log in to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}
            ${{ env.DOCKERHUB_NAMESPACE }}/${{ github.event.repository.name }}
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=${{ env.version }}

      - name: Stage Docker build environment from sbt
        run: sbt Docker/stage

      - name: Build and Push
        id: push
        uses: docker/build-push-action@v6
        with:
          context: target/docker/stage
          push: true
          provenance: mode=max
          sbom: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
