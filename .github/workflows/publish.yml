name: Publish package to Maven Central, GitHub Packages, and Container Image to Docker Hub  # goatrodeo

on:
  push:
    branches:
      - main
      - mj/cli-scan        # remove before merging
    tags:
      - "v*.*.*"

env:
  REPO: ${{ github.event.repository.name }}
  PLATFORMS: linux/amd64,linux/arm64

permissions:
  contents: write
  packages: write
  id-token: write
  attestations: write

jobs:
  build_and_scan_branch:
    name: Build (branch) and scan artifacts
    if: ${{ github.ref_type == 'branch' }}
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: "sbt"

      - name: Set up SBT
        uses: sbt/setup-sbt@v1

      - name: Build for scan
        env:
          SBT_OPTS: "-Xmx8G -Duser.timezone=GMT"
        run: sbt +package

      - name: Run Spice-Labs CLI scan (branch build)
        uses: spice-labs-inc/action-spice-labs-cli-scan@v3
        with:
          spice_pass: "${{ secrets.SPICE_PASS }}"
          file_path: "${{ github.workspace }}"
          tag: "${{ github.event.repository.name }}"

  release_publish_jars:
    name: Publish JARs to GitHub Packages (tags only)
    if: ${{ github.ref_type == 'tag' }}
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate and extract version from tag
        id: version
        shell: bash
        run: |
          if [[ "${GITHUB_REF}" =~ ^refs/tags/v([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            echo "version=${BASH_REMATCH[1]}" >> "$GITHUB_OUTPUT"
          else
            echo "Not a semantic version tag (vX.Y.Z): ${GITHUB_REF}" >&2
            exit 1
          fi

      - name: Ensure tag commit is on main (required for public release)
        id: on_main
        shell: bash
        run: |
          set -euo pipefail
          git fetch --no-tags origin +refs/heads/main:refs/remotes/origin/main
          if git merge-base --is-ancestor "${GITHUB_SHA}" "origin/main"; then
            echo "ok=true" >> "$GITHUB_OUTPUT"
          else
            echo "ok=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: "sbt"

      - name: Set up SBT
        uses: sbt/setup-sbt@v1

      - name: Build and (conditionally) publish to GitHub Packages
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          SBT_OPTS: "-Xmx8G -Duser.timezone=GMT"
        run: |
          if [[ "${{ steps.on_main.outputs.ok }}" == "true" ]]; then
            sbt "set ThisBuild / version := \"${{ steps.version.outputs.version }}\"" +publish
          else
            sbt "set ThisBuild / version := \"${{ steps.version.outputs.version }}\"" +package
          fi

      - name: Run Spice-Labs CLI scan (tag build)
        uses: spice-labs-inc/action-spice-labs-cli-scan@v3
        with:
          spice_pass: "${{ secrets.SPICE_PASS }}"
          file_path: "${{ github.workspace }}"
          tag: "${{ github.event.repository.name }}"

  release_publish_central:
    name: Publish to Maven Central (tags on main only)
    runs-on: ubuntu-24.04
    needs: release_publish_jars
    if: ${{ needs.release_publish_jars.result == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: "maven"

      - name: Write settings.xml for Central
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings>
            <servers>
              <server>
                <id>central</id>
                <username>${{ secrets.MAVEN_CENTRAL_USERNAME }}</username>
                <password>${{ secrets.MAVEN_CENTRAL_PASSWORD }}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Import GPG key
        run: |
          echo "${{ secrets.MAVEN_CENTRAL_GPG_PRIVATE_KEY }}" | gpg --batch --import

      - name: Set project version from tag
        run: |
          mvn -B --file maven/pom.xml               clean versions:set -DnewVersion="${{ needs.release_publish_jars.outputs.version }}" -DgenerateBackupPoms=false

      - name: Publish to Maven Central
        env:
          GPG_PASSPHRASE: "${{ secrets.MAVEN_CENTRAL_GPG_PASSPHRASE }}"
        run: |
          cd maven
          mvn --batch-mode deploy

  release_docker_image:
    name: Build Docker image and push to Docker Hub (tags on main only)
    if: ${{ github.ref_type == 'tag' }}
    runs-on: ubuntu-24.04
    needs: release_publish_jars
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"

      - name: Extract Docker image metadata (release tags only)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: spicelabs/goatrodeo
          tags: |
            type=semver,pattern={{version}}
          flavor: |
            latest=false

      - name: Build and push Docker image
        id: build_image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: true
          provenance: true
          sbom: true
          tags: "${{ steps.meta.outputs.tags }}"
          labels: "${{ steps.meta.outputs.labels }}"

      - name: Run Spice-Labs CLI scan (Docker image)
        uses: spice-labs-inc/action-spice-labs-cli-scan@v3
        with:
          spice_pass: "${{ secrets.SPICE_PASS }}"
          file_path: "${{ github.workspace }}"
          tag: "${{ github.event.repository.name }}"
